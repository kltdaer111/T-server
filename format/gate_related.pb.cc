// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate_related.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gate_related.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gr {

namespace {

const ::google::protobuf::Descriptor* Notify_Connection_Id_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Notify_Connection_Id_reflection_ = NULL;
const ::google::protobuf::Descriptor* Player_Login_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Player_Login_reflection_ = NULL;
const ::google::protobuf::Descriptor* Inter_Server_Register_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Inter_Server_Register_reflection_ = NULL;
const ::google::protobuf::Descriptor* Notify_Obj_Master_Player_Login_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Notify_Obj_Master_Player_Login_reflection_ = NULL;
const ::google::protobuf::Descriptor* Gatemgr_Apply_Fastest_Gate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Gatemgr_Apply_Fastest_Gate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Server_Info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Server_Info_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gate_5frelated_2eproto() {
  protobuf_AddDesc_gate_5frelated_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gate_related.proto");
  GOOGLE_CHECK(file != NULL);
  Notify_Connection_Id_descriptor_ = file->message_type(0);
  static const int Notify_Connection_Id_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify_Connection_Id, connection_id_),
  };
  Notify_Connection_Id_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Notify_Connection_Id_descriptor_,
      Notify_Connection_Id::default_instance_,
      Notify_Connection_Id_offsets_,
      -1,
      -1,
      -1,
      sizeof(Notify_Connection_Id),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify_Connection_Id, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify_Connection_Id, _is_default_instance_));
  Player_Login_descriptor_ = file->message_type(1);
  static const int Player_Login_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_Login, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_Login, ipv4_),
  };
  Player_Login_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Player_Login_descriptor_,
      Player_Login::default_instance_,
      Player_Login_offsets_,
      -1,
      -1,
      -1,
      sizeof(Player_Login),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_Login, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Player_Login, _is_default_instance_));
  Inter_Server_Register_descriptor_ = file->message_type(2);
  static const int Inter_Server_Register_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inter_Server_Register, server_type_),
  };
  Inter_Server_Register_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Inter_Server_Register_descriptor_,
      Inter_Server_Register::default_instance_,
      Inter_Server_Register_offsets_,
      -1,
      -1,
      -1,
      sizeof(Inter_Server_Register),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inter_Server_Register, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inter_Server_Register, _is_default_instance_));
  Notify_Obj_Master_Player_Login_descriptor_ = file->message_type(3);
  static const int Notify_Obj_Master_Player_Login_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify_Obj_Master_Player_Login, char_id_),
  };
  Notify_Obj_Master_Player_Login_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Notify_Obj_Master_Player_Login_descriptor_,
      Notify_Obj_Master_Player_Login::default_instance_,
      Notify_Obj_Master_Player_Login_offsets_,
      -1,
      -1,
      -1,
      sizeof(Notify_Obj_Master_Player_Login),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify_Obj_Master_Player_Login, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify_Obj_Master_Player_Login, _is_default_instance_));
  Gatemgr_Apply_Fastest_Gate_descriptor_ = file->message_type(4);
  static const int Gatemgr_Apply_Fastest_Gate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gatemgr_Apply_Fastest_Gate, client_connection_id_),
  };
  Gatemgr_Apply_Fastest_Gate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Gatemgr_Apply_Fastest_Gate_descriptor_,
      Gatemgr_Apply_Fastest_Gate::default_instance_,
      Gatemgr_Apply_Fastest_Gate_offsets_,
      -1,
      -1,
      -1,
      sizeof(Gatemgr_Apply_Fastest_Gate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gatemgr_Apply_Fastest_Gate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gatemgr_Apply_Fastest_Gate, _is_default_instance_));
  Server_Info_descriptor_ = file->message_type(5);
  static const int Server_Info_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Server_Info, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Server_Info, port_),
  };
  Server_Info_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Server_Info_descriptor_,
      Server_Info::default_instance_,
      Server_Info_offsets_,
      -1,
      -1,
      -1,
      sizeof(Server_Info),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Server_Info, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Server_Info, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gate_5frelated_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Notify_Connection_Id_descriptor_, &Notify_Connection_Id::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Player_Login_descriptor_, &Player_Login::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Inter_Server_Register_descriptor_, &Inter_Server_Register::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Notify_Obj_Master_Player_Login_descriptor_, &Notify_Obj_Master_Player_Login::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Gatemgr_Apply_Fastest_Gate_descriptor_, &Gatemgr_Apply_Fastest_Gate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Server_Info_descriptor_, &Server_Info::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gate_5frelated_2eproto() {
  delete Notify_Connection_Id::default_instance_;
  delete Notify_Connection_Id_reflection_;
  delete Player_Login::default_instance_;
  delete Player_Login_reflection_;
  delete Inter_Server_Register::default_instance_;
  delete Inter_Server_Register_reflection_;
  delete Notify_Obj_Master_Player_Login::default_instance_;
  delete Notify_Obj_Master_Player_Login_reflection_;
  delete Gatemgr_Apply_Fastest_Gate::default_instance_;
  delete Gatemgr_Apply_Fastest_Gate_reflection_;
  delete Server_Info::default_instance_;
  delete Server_Info_reflection_;
}

void protobuf_AddDesc_gate_5frelated_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022gate_related.proto\022\002gr\"-\n\024Notify_Conne"
    "ction_Id\022\025\n\rconnection_id\030\001 \001(\005\"-\n\014Playe"
    "r_Login\022\017\n\007char_id\030\001 \001(\005\022\014\n\004ipv4\030\002 \001(\005\","
    "\n\025Inter_Server_Register\022\023\n\013server_type\030\001"
    " \001(\005\"1\n\036Notify_Obj_Master_Player_Login\022\017"
    "\n\007char_id\030\001 \001(\005\":\n\032Gatemgr_Apply_Fastest"
    "_Gate\022\034\n\024client_connection_id\030\001 \001(\005\"\'\n\013S"
    "erver_Info\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005b\006pr"
    "oto3", 324);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gate_related.proto", &protobuf_RegisterTypes);
  Notify_Connection_Id::default_instance_ = new Notify_Connection_Id();
  Player_Login::default_instance_ = new Player_Login();
  Inter_Server_Register::default_instance_ = new Inter_Server_Register();
  Notify_Obj_Master_Player_Login::default_instance_ = new Notify_Obj_Master_Player_Login();
  Gatemgr_Apply_Fastest_Gate::default_instance_ = new Gatemgr_Apply_Fastest_Gate();
  Server_Info::default_instance_ = new Server_Info();
  Notify_Connection_Id::default_instance_->InitAsDefaultInstance();
  Player_Login::default_instance_->InitAsDefaultInstance();
  Inter_Server_Register::default_instance_->InitAsDefaultInstance();
  Notify_Obj_Master_Player_Login::default_instance_->InitAsDefaultInstance();
  Gatemgr_Apply_Fastest_Gate::default_instance_->InitAsDefaultInstance();
  Server_Info::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gate_5frelated_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gate_5frelated_2eproto {
  StaticDescriptorInitializer_gate_5frelated_2eproto() {
    protobuf_AddDesc_gate_5frelated_2eproto();
  }
} static_descriptor_initializer_gate_5frelated_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notify_Connection_Id::kConnectionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notify_Connection_Id::Notify_Connection_Id()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gr.Notify_Connection_Id)
}

void Notify_Connection_Id::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Notify_Connection_Id::Notify_Connection_Id(const Notify_Connection_Id& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gr.Notify_Connection_Id)
}

void Notify_Connection_Id::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  connection_id_ = 0;
}

Notify_Connection_Id::~Notify_Connection_Id() {
  // @@protoc_insertion_point(destructor:gr.Notify_Connection_Id)
  SharedDtor();
}

void Notify_Connection_Id::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Notify_Connection_Id::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notify_Connection_Id::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notify_Connection_Id_descriptor_;
}

const Notify_Connection_Id& Notify_Connection_Id::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_5frelated_2eproto();
  return *default_instance_;
}

Notify_Connection_Id* Notify_Connection_Id::default_instance_ = NULL;

Notify_Connection_Id* Notify_Connection_Id::New(::google::protobuf::Arena* arena) const {
  Notify_Connection_Id* n = new Notify_Connection_Id;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Notify_Connection_Id::Clear() {
  connection_id_ = 0;
}

bool Notify_Connection_Id::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gr.Notify_Connection_Id)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 connection_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connection_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gr.Notify_Connection_Id)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gr.Notify_Connection_Id)
  return false;
#undef DO_
}

void Notify_Connection_Id::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gr.Notify_Connection_Id)
  // optional int32 connection_id = 1;
  if (this->connection_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->connection_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:gr.Notify_Connection_Id)
}

::google::protobuf::uint8* Notify_Connection_Id::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gr.Notify_Connection_Id)
  // optional int32 connection_id = 1;
  if (this->connection_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->connection_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gr.Notify_Connection_Id)
  return target;
}

int Notify_Connection_Id::ByteSize() const {
  int total_size = 0;

  // optional int32 connection_id = 1;
  if (this->connection_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->connection_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notify_Connection_Id::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Notify_Connection_Id* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Notify_Connection_Id>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Notify_Connection_Id::MergeFrom(const Notify_Connection_Id& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.connection_id() != 0) {
    set_connection_id(from.connection_id());
  }
}

void Notify_Connection_Id::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_Connection_Id::CopyFrom(const Notify_Connection_Id& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_Connection_Id::IsInitialized() const {

  return true;
}

void Notify_Connection_Id::Swap(Notify_Connection_Id* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notify_Connection_Id::InternalSwap(Notify_Connection_Id* other) {
  std::swap(connection_id_, other->connection_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notify_Connection_Id::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Notify_Connection_Id_descriptor_;
  metadata.reflection = Notify_Connection_Id_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Notify_Connection_Id

// optional int32 connection_id = 1;
void Notify_Connection_Id::clear_connection_id() {
  connection_id_ = 0;
}
 ::google::protobuf::int32 Notify_Connection_Id::connection_id() const {
  // @@protoc_insertion_point(field_get:gr.Notify_Connection_Id.connection_id)
  return connection_id_;
}
 void Notify_Connection_Id::set_connection_id(::google::protobuf::int32 value) {
  
  connection_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Notify_Connection_Id.connection_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Player_Login::kCharIdFieldNumber;
const int Player_Login::kIpv4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Player_Login::Player_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gr.Player_Login)
}

void Player_Login::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Player_Login::Player_Login(const Player_Login& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gr.Player_Login)
}

void Player_Login::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  char_id_ = 0;
  ipv4_ = 0;
}

Player_Login::~Player_Login() {
  // @@protoc_insertion_point(destructor:gr.Player_Login)
  SharedDtor();
}

void Player_Login::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Player_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Player_Login::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Player_Login_descriptor_;
}

const Player_Login& Player_Login::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_5frelated_2eproto();
  return *default_instance_;
}

Player_Login* Player_Login::default_instance_ = NULL;

Player_Login* Player_Login::New(::google::protobuf::Arena* arena) const {
  Player_Login* n = new Player_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Player_Login::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Player_Login*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(char_id_, ipv4_);

#undef ZR_HELPER_
#undef ZR_

}

bool Player_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gr.Player_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &char_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ipv4;
        break;
      }

      // optional int32 ipv4 = 2;
      case 2: {
        if (tag == 16) {
         parse_ipv4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ipv4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gr.Player_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gr.Player_Login)
  return false;
#undef DO_
}

void Player_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gr.Player_Login)
  // optional int32 char_id = 1;
  if (this->char_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->char_id(), output);
  }

  // optional int32 ipv4 = 2;
  if (this->ipv4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ipv4(), output);
  }

  // @@protoc_insertion_point(serialize_end:gr.Player_Login)
}

::google::protobuf::uint8* Player_Login::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gr.Player_Login)
  // optional int32 char_id = 1;
  if (this->char_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->char_id(), target);
  }

  // optional int32 ipv4 = 2;
  if (this->ipv4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ipv4(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gr.Player_Login)
  return target;
}

int Player_Login::ByteSize() const {
  int total_size = 0;

  // optional int32 char_id = 1;
  if (this->char_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->char_id());
  }

  // optional int32 ipv4 = 2;
  if (this->ipv4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ipv4());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Player_Login::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Player_Login* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Player_Login>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Player_Login::MergeFrom(const Player_Login& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.char_id() != 0) {
    set_char_id(from.char_id());
  }
  if (from.ipv4() != 0) {
    set_ipv4(from.ipv4());
  }
}

void Player_Login::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Player_Login::CopyFrom(const Player_Login& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Player_Login::IsInitialized() const {

  return true;
}

void Player_Login::Swap(Player_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Player_Login::InternalSwap(Player_Login* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(ipv4_, other->ipv4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Player_Login::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Player_Login_descriptor_;
  metadata.reflection = Player_Login_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Player_Login

// optional int32 char_id = 1;
void Player_Login::clear_char_id() {
  char_id_ = 0;
}
 ::google::protobuf::int32 Player_Login::char_id() const {
  // @@protoc_insertion_point(field_get:gr.Player_Login.char_id)
  return char_id_;
}
 void Player_Login::set_char_id(::google::protobuf::int32 value) {
  
  char_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Player_Login.char_id)
}

// optional int32 ipv4 = 2;
void Player_Login::clear_ipv4() {
  ipv4_ = 0;
}
 ::google::protobuf::int32 Player_Login::ipv4() const {
  // @@protoc_insertion_point(field_get:gr.Player_Login.ipv4)
  return ipv4_;
}
 void Player_Login::set_ipv4(::google::protobuf::int32 value) {
  
  ipv4_ = value;
  // @@protoc_insertion_point(field_set:gr.Player_Login.ipv4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Inter_Server_Register::kServerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Inter_Server_Register::Inter_Server_Register()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gr.Inter_Server_Register)
}

void Inter_Server_Register::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Inter_Server_Register::Inter_Server_Register(const Inter_Server_Register& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gr.Inter_Server_Register)
}

void Inter_Server_Register::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  server_type_ = 0;
}

Inter_Server_Register::~Inter_Server_Register() {
  // @@protoc_insertion_point(destructor:gr.Inter_Server_Register)
  SharedDtor();
}

void Inter_Server_Register::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Inter_Server_Register::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Inter_Server_Register::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Inter_Server_Register_descriptor_;
}

const Inter_Server_Register& Inter_Server_Register::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_5frelated_2eproto();
  return *default_instance_;
}

Inter_Server_Register* Inter_Server_Register::default_instance_ = NULL;

Inter_Server_Register* Inter_Server_Register::New(::google::protobuf::Arena* arena) const {
  Inter_Server_Register* n = new Inter_Server_Register;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Inter_Server_Register::Clear() {
  server_type_ = 0;
}

bool Inter_Server_Register::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gr.Inter_Server_Register)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 server_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gr.Inter_Server_Register)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gr.Inter_Server_Register)
  return false;
#undef DO_
}

void Inter_Server_Register::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gr.Inter_Server_Register)
  // optional int32 server_type = 1;
  if (this->server_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:gr.Inter_Server_Register)
}

::google::protobuf::uint8* Inter_Server_Register::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gr.Inter_Server_Register)
  // optional int32 server_type = 1;
  if (this->server_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gr.Inter_Server_Register)
  return target;
}

int Inter_Server_Register::ByteSize() const {
  int total_size = 0;

  // optional int32 server_type = 1;
  if (this->server_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Inter_Server_Register::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Inter_Server_Register* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Inter_Server_Register>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Inter_Server_Register::MergeFrom(const Inter_Server_Register& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.server_type() != 0) {
    set_server_type(from.server_type());
  }
}

void Inter_Server_Register::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inter_Server_Register::CopyFrom(const Inter_Server_Register& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inter_Server_Register::IsInitialized() const {

  return true;
}

void Inter_Server_Register::Swap(Inter_Server_Register* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inter_Server_Register::InternalSwap(Inter_Server_Register* other) {
  std::swap(server_type_, other->server_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Inter_Server_Register::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Inter_Server_Register_descriptor_;
  metadata.reflection = Inter_Server_Register_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Inter_Server_Register

// optional int32 server_type = 1;
void Inter_Server_Register::clear_server_type() {
  server_type_ = 0;
}
 ::google::protobuf::int32 Inter_Server_Register::server_type() const {
  // @@protoc_insertion_point(field_get:gr.Inter_Server_Register.server_type)
  return server_type_;
}
 void Inter_Server_Register::set_server_type(::google::protobuf::int32 value) {
  
  server_type_ = value;
  // @@protoc_insertion_point(field_set:gr.Inter_Server_Register.server_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notify_Obj_Master_Player_Login::kCharIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notify_Obj_Master_Player_Login::Notify_Obj_Master_Player_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gr.Notify_Obj_Master_Player_Login)
}

void Notify_Obj_Master_Player_Login::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Notify_Obj_Master_Player_Login::Notify_Obj_Master_Player_Login(const Notify_Obj_Master_Player_Login& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gr.Notify_Obj_Master_Player_Login)
}

void Notify_Obj_Master_Player_Login::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  char_id_ = 0;
}

Notify_Obj_Master_Player_Login::~Notify_Obj_Master_Player_Login() {
  // @@protoc_insertion_point(destructor:gr.Notify_Obj_Master_Player_Login)
  SharedDtor();
}

void Notify_Obj_Master_Player_Login::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Notify_Obj_Master_Player_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notify_Obj_Master_Player_Login::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notify_Obj_Master_Player_Login_descriptor_;
}

const Notify_Obj_Master_Player_Login& Notify_Obj_Master_Player_Login::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_5frelated_2eproto();
  return *default_instance_;
}

Notify_Obj_Master_Player_Login* Notify_Obj_Master_Player_Login::default_instance_ = NULL;

Notify_Obj_Master_Player_Login* Notify_Obj_Master_Player_Login::New(::google::protobuf::Arena* arena) const {
  Notify_Obj_Master_Player_Login* n = new Notify_Obj_Master_Player_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Notify_Obj_Master_Player_Login::Clear() {
  char_id_ = 0;
}

bool Notify_Obj_Master_Player_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gr.Notify_Obj_Master_Player_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &char_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gr.Notify_Obj_Master_Player_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gr.Notify_Obj_Master_Player_Login)
  return false;
#undef DO_
}

void Notify_Obj_Master_Player_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gr.Notify_Obj_Master_Player_Login)
  // optional int32 char_id = 1;
  if (this->char_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->char_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:gr.Notify_Obj_Master_Player_Login)
}

::google::protobuf::uint8* Notify_Obj_Master_Player_Login::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gr.Notify_Obj_Master_Player_Login)
  // optional int32 char_id = 1;
  if (this->char_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->char_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gr.Notify_Obj_Master_Player_Login)
  return target;
}

int Notify_Obj_Master_Player_Login::ByteSize() const {
  int total_size = 0;

  // optional int32 char_id = 1;
  if (this->char_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->char_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notify_Obj_Master_Player_Login::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Notify_Obj_Master_Player_Login* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Notify_Obj_Master_Player_Login>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Notify_Obj_Master_Player_Login::MergeFrom(const Notify_Obj_Master_Player_Login& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.char_id() != 0) {
    set_char_id(from.char_id());
  }
}

void Notify_Obj_Master_Player_Login::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_Obj_Master_Player_Login::CopyFrom(const Notify_Obj_Master_Player_Login& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_Obj_Master_Player_Login::IsInitialized() const {

  return true;
}

void Notify_Obj_Master_Player_Login::Swap(Notify_Obj_Master_Player_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notify_Obj_Master_Player_Login::InternalSwap(Notify_Obj_Master_Player_Login* other) {
  std::swap(char_id_, other->char_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notify_Obj_Master_Player_Login::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Notify_Obj_Master_Player_Login_descriptor_;
  metadata.reflection = Notify_Obj_Master_Player_Login_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Notify_Obj_Master_Player_Login

// optional int32 char_id = 1;
void Notify_Obj_Master_Player_Login::clear_char_id() {
  char_id_ = 0;
}
 ::google::protobuf::int32 Notify_Obj_Master_Player_Login::char_id() const {
  // @@protoc_insertion_point(field_get:gr.Notify_Obj_Master_Player_Login.char_id)
  return char_id_;
}
 void Notify_Obj_Master_Player_Login::set_char_id(::google::protobuf::int32 value) {
  
  char_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Notify_Obj_Master_Player_Login.char_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gatemgr_Apply_Fastest_Gate::kClientConnectionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gatemgr_Apply_Fastest_Gate::Gatemgr_Apply_Fastest_Gate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gr.Gatemgr_Apply_Fastest_Gate)
}

void Gatemgr_Apply_Fastest_Gate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Gatemgr_Apply_Fastest_Gate::Gatemgr_Apply_Fastest_Gate(const Gatemgr_Apply_Fastest_Gate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gr.Gatemgr_Apply_Fastest_Gate)
}

void Gatemgr_Apply_Fastest_Gate::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  client_connection_id_ = 0;
}

Gatemgr_Apply_Fastest_Gate::~Gatemgr_Apply_Fastest_Gate() {
  // @@protoc_insertion_point(destructor:gr.Gatemgr_Apply_Fastest_Gate)
  SharedDtor();
}

void Gatemgr_Apply_Fastest_Gate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Gatemgr_Apply_Fastest_Gate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gatemgr_Apply_Fastest_Gate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Gatemgr_Apply_Fastest_Gate_descriptor_;
}

const Gatemgr_Apply_Fastest_Gate& Gatemgr_Apply_Fastest_Gate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_5frelated_2eproto();
  return *default_instance_;
}

Gatemgr_Apply_Fastest_Gate* Gatemgr_Apply_Fastest_Gate::default_instance_ = NULL;

Gatemgr_Apply_Fastest_Gate* Gatemgr_Apply_Fastest_Gate::New(::google::protobuf::Arena* arena) const {
  Gatemgr_Apply_Fastest_Gate* n = new Gatemgr_Apply_Fastest_Gate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gatemgr_Apply_Fastest_Gate::Clear() {
  client_connection_id_ = 0;
}

bool Gatemgr_Apply_Fastest_Gate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gr.Gatemgr_Apply_Fastest_Gate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 client_connection_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_connection_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gr.Gatemgr_Apply_Fastest_Gate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gr.Gatemgr_Apply_Fastest_Gate)
  return false;
#undef DO_
}

void Gatemgr_Apply_Fastest_Gate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gr.Gatemgr_Apply_Fastest_Gate)
  // optional int32 client_connection_id = 1;
  if (this->client_connection_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->client_connection_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:gr.Gatemgr_Apply_Fastest_Gate)
}

::google::protobuf::uint8* Gatemgr_Apply_Fastest_Gate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gr.Gatemgr_Apply_Fastest_Gate)
  // optional int32 client_connection_id = 1;
  if (this->client_connection_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->client_connection_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gr.Gatemgr_Apply_Fastest_Gate)
  return target;
}

int Gatemgr_Apply_Fastest_Gate::ByteSize() const {
  int total_size = 0;

  // optional int32 client_connection_id = 1;
  if (this->client_connection_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_connection_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gatemgr_Apply_Fastest_Gate::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Gatemgr_Apply_Fastest_Gate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Gatemgr_Apply_Fastest_Gate>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Gatemgr_Apply_Fastest_Gate::MergeFrom(const Gatemgr_Apply_Fastest_Gate& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.client_connection_id() != 0) {
    set_client_connection_id(from.client_connection_id());
  }
}

void Gatemgr_Apply_Fastest_Gate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gatemgr_Apply_Fastest_Gate::CopyFrom(const Gatemgr_Apply_Fastest_Gate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gatemgr_Apply_Fastest_Gate::IsInitialized() const {

  return true;
}

void Gatemgr_Apply_Fastest_Gate::Swap(Gatemgr_Apply_Fastest_Gate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gatemgr_Apply_Fastest_Gate::InternalSwap(Gatemgr_Apply_Fastest_Gate* other) {
  std::swap(client_connection_id_, other->client_connection_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gatemgr_Apply_Fastest_Gate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Gatemgr_Apply_Fastest_Gate_descriptor_;
  metadata.reflection = Gatemgr_Apply_Fastest_Gate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gatemgr_Apply_Fastest_Gate

// optional int32 client_connection_id = 1;
void Gatemgr_Apply_Fastest_Gate::clear_client_connection_id() {
  client_connection_id_ = 0;
}
 ::google::protobuf::int32 Gatemgr_Apply_Fastest_Gate::client_connection_id() const {
  // @@protoc_insertion_point(field_get:gr.Gatemgr_Apply_Fastest_Gate.client_connection_id)
  return client_connection_id_;
}
 void Gatemgr_Apply_Fastest_Gate::set_client_connection_id(::google::protobuf::int32 value) {
  
  client_connection_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Gatemgr_Apply_Fastest_Gate.client_connection_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Server_Info::kIpFieldNumber;
const int Server_Info::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Server_Info::Server_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gr.Server_Info)
}

void Server_Info::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Server_Info::Server_Info(const Server_Info& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gr.Server_Info)
}

void Server_Info::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

Server_Info::~Server_Info() {
  // @@protoc_insertion_point(destructor:gr.Server_Info)
  SharedDtor();
}

void Server_Info::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Server_Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Server_Info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Server_Info_descriptor_;
}

const Server_Info& Server_Info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gate_5frelated_2eproto();
  return *default_instance_;
}

Server_Info* Server_Info::default_instance_ = NULL;

Server_Info* Server_Info::New(::google::protobuf::Arena* arena) const {
  Server_Info* n = new Server_Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Server_Info::Clear() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

bool Server_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gr.Server_Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gr.Server_Info.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_port;
        break;
      }

      // optional int32 port = 2;
      case 2: {
        if (tag == 16) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gr.Server_Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gr.Server_Info)
  return false;
#undef DO_
}

void Server_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gr.Server_Info)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gr.Server_Info.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // optional int32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // @@protoc_insertion_point(serialize_end:gr.Server_Info)
}

::google::protobuf::uint8* Server_Info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gr.Server_Info)
  // optional string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gr.Server_Info.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // optional int32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gr.Server_Info)
  return target;
}

int Server_Info::ByteSize() const {
  int total_size = 0;

  // optional string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // optional int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Server_Info::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Server_Info* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Server_Info>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Server_Info::MergeFrom(const Server_Info& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void Server_Info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Server_Info::CopyFrom(const Server_Info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Server_Info::IsInitialized() const {

  return true;
}

void Server_Info::Swap(Server_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Server_Info::InternalSwap(Server_Info* other) {
  ip_.Swap(&other->ip_);
  std::swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Server_Info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Server_Info_descriptor_;
  metadata.reflection = Server_Info_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Server_Info

// optional string ip = 1;
void Server_Info::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Server_Info::ip() const {
  // @@protoc_insertion_point(field_get:gr.Server_Info.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Server_Info::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gr.Server_Info.ip)
}
 void Server_Info::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gr.Server_Info.ip)
}
 void Server_Info::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gr.Server_Info.ip)
}
 ::std::string* Server_Info::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:gr.Server_Info.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Server_Info::release_ip() {
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Server_Info::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:gr.Server_Info.ip)
}

// optional int32 port = 2;
void Server_Info::clear_port() {
  port_ = 0;
}
 ::google::protobuf::int32 Server_Info::port() const {
  // @@protoc_insertion_point(field_get:gr.Server_Info.port)
  return port_;
}
 void Server_Info::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:gr.Server_Info.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gr

// @@protoc_insertion_point(global_scope)
