// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate_related.proto

#ifndef PROTOBUF_gate_5frelated_2eproto__INCLUDED
#define PROTOBUF_gate_5frelated_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gr {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_gate_5frelated_2eproto();
void protobuf_AssignDesc_gate_5frelated_2eproto();
void protobuf_ShutdownFile_gate_5frelated_2eproto();

class Gatemgr_Apply_Fastest_Gate;
class Inter_Server_Register;
class Notify_Connection_Id;
class Notify_Obj_Master_Player_Login;
class Player_Login;
class Server_Info;

// ===================================================================

class Notify_Connection_Id : public ::google::protobuf::Message {
 public:
  Notify_Connection_Id();
  virtual ~Notify_Connection_Id();

  Notify_Connection_Id(const Notify_Connection_Id& from);

  inline Notify_Connection_Id& operator=(const Notify_Connection_Id& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notify_Connection_Id& default_instance();

  void Swap(Notify_Connection_Id* other);

  // implements Message ----------------------------------------------

  inline Notify_Connection_Id* New() const { return New(NULL); }

  Notify_Connection_Id* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Notify_Connection_Id& from);
  void MergeFrom(const Notify_Connection_Id& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Notify_Connection_Id* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 connection_id = 1;
  void clear_connection_id();
  static const int kConnectionIdFieldNumber = 1;
  ::google::protobuf::int32 connection_id() const;
  void set_connection_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gr.Notify_Connection_Id)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 connection_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_5frelated_2eproto();
  friend void protobuf_AssignDesc_gate_5frelated_2eproto();
  friend void protobuf_ShutdownFile_gate_5frelated_2eproto();

  void InitAsDefaultInstance();
  static Notify_Connection_Id* default_instance_;
};
// -------------------------------------------------------------------

class Player_Login : public ::google::protobuf::Message {
 public:
  Player_Login();
  virtual ~Player_Login();

  Player_Login(const Player_Login& from);

  inline Player_Login& operator=(const Player_Login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_Login& default_instance();

  void Swap(Player_Login* other);

  // implements Message ----------------------------------------------

  inline Player_Login* New() const { return New(NULL); }

  Player_Login* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player_Login& from);
  void MergeFrom(const Player_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Player_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 char_id = 1;
  void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  ::google::protobuf::int32 char_id() const;
  void set_char_id(::google::protobuf::int32 value);

  // optional int32 ipv4 = 2;
  void clear_ipv4();
  static const int kIpv4FieldNumber = 2;
  ::google::protobuf::int32 ipv4() const;
  void set_ipv4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gr.Player_Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 char_id_;
  ::google::protobuf::int32 ipv4_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_5frelated_2eproto();
  friend void protobuf_AssignDesc_gate_5frelated_2eproto();
  friend void protobuf_ShutdownFile_gate_5frelated_2eproto();

  void InitAsDefaultInstance();
  static Player_Login* default_instance_;
};
// -------------------------------------------------------------------

class Inter_Server_Register : public ::google::protobuf::Message {
 public:
  Inter_Server_Register();
  virtual ~Inter_Server_Register();

  Inter_Server_Register(const Inter_Server_Register& from);

  inline Inter_Server_Register& operator=(const Inter_Server_Register& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inter_Server_Register& default_instance();

  void Swap(Inter_Server_Register* other);

  // implements Message ----------------------------------------------

  inline Inter_Server_Register* New() const { return New(NULL); }

  Inter_Server_Register* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inter_Server_Register& from);
  void MergeFrom(const Inter_Server_Register& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Inter_Server_Register* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 server_type = 1;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 1;
  ::google::protobuf::int32 server_type() const;
  void set_server_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gr.Inter_Server_Register)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 server_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_5frelated_2eproto();
  friend void protobuf_AssignDesc_gate_5frelated_2eproto();
  friend void protobuf_ShutdownFile_gate_5frelated_2eproto();

  void InitAsDefaultInstance();
  static Inter_Server_Register* default_instance_;
};
// -------------------------------------------------------------------

class Notify_Obj_Master_Player_Login : public ::google::protobuf::Message {
 public:
  Notify_Obj_Master_Player_Login();
  virtual ~Notify_Obj_Master_Player_Login();

  Notify_Obj_Master_Player_Login(const Notify_Obj_Master_Player_Login& from);

  inline Notify_Obj_Master_Player_Login& operator=(const Notify_Obj_Master_Player_Login& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notify_Obj_Master_Player_Login& default_instance();

  void Swap(Notify_Obj_Master_Player_Login* other);

  // implements Message ----------------------------------------------

  inline Notify_Obj_Master_Player_Login* New() const { return New(NULL); }

  Notify_Obj_Master_Player_Login* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Notify_Obj_Master_Player_Login& from);
  void MergeFrom(const Notify_Obj_Master_Player_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Notify_Obj_Master_Player_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 char_id = 1;
  void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  ::google::protobuf::int32 char_id() const;
  void set_char_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gr.Notify_Obj_Master_Player_Login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 char_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_5frelated_2eproto();
  friend void protobuf_AssignDesc_gate_5frelated_2eproto();
  friend void protobuf_ShutdownFile_gate_5frelated_2eproto();

  void InitAsDefaultInstance();
  static Notify_Obj_Master_Player_Login* default_instance_;
};
// -------------------------------------------------------------------

class Gatemgr_Apply_Fastest_Gate : public ::google::protobuf::Message {
 public:
  Gatemgr_Apply_Fastest_Gate();
  virtual ~Gatemgr_Apply_Fastest_Gate();

  Gatemgr_Apply_Fastest_Gate(const Gatemgr_Apply_Fastest_Gate& from);

  inline Gatemgr_Apply_Fastest_Gate& operator=(const Gatemgr_Apply_Fastest_Gate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gatemgr_Apply_Fastest_Gate& default_instance();

  void Swap(Gatemgr_Apply_Fastest_Gate* other);

  // implements Message ----------------------------------------------

  inline Gatemgr_Apply_Fastest_Gate* New() const { return New(NULL); }

  Gatemgr_Apply_Fastest_Gate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gatemgr_Apply_Fastest_Gate& from);
  void MergeFrom(const Gatemgr_Apply_Fastest_Gate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gatemgr_Apply_Fastest_Gate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 client_connection_id = 1;
  void clear_client_connection_id();
  static const int kClientConnectionIdFieldNumber = 1;
  ::google::protobuf::int32 client_connection_id() const;
  void set_client_connection_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gr.Gatemgr_Apply_Fastest_Gate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 client_connection_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_5frelated_2eproto();
  friend void protobuf_AssignDesc_gate_5frelated_2eproto();
  friend void protobuf_ShutdownFile_gate_5frelated_2eproto();

  void InitAsDefaultInstance();
  static Gatemgr_Apply_Fastest_Gate* default_instance_;
};
// -------------------------------------------------------------------

class Server_Info : public ::google::protobuf::Message {
 public:
  Server_Info();
  virtual ~Server_Info();

  Server_Info(const Server_Info& from);

  inline Server_Info& operator=(const Server_Info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Server_Info& default_instance();

  void Swap(Server_Info* other);

  // implements Message ----------------------------------------------

  inline Server_Info* New() const { return New(NULL); }

  Server_Info* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Server_Info& from);
  void MergeFrom(const Server_Info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Server_Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gr.Server_Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 port_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gate_5frelated_2eproto();
  friend void protobuf_AssignDesc_gate_5frelated_2eproto();
  friend void protobuf_ShutdownFile_gate_5frelated_2eproto();

  void InitAsDefaultInstance();
  static Server_Info* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Notify_Connection_Id

// optional int32 connection_id = 1;
inline void Notify_Connection_Id::clear_connection_id() {
  connection_id_ = 0;
}
inline ::google::protobuf::int32 Notify_Connection_Id::connection_id() const {
  // @@protoc_insertion_point(field_get:gr.Notify_Connection_Id.connection_id)
  return connection_id_;
}
inline void Notify_Connection_Id::set_connection_id(::google::protobuf::int32 value) {
  
  connection_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Notify_Connection_Id.connection_id)
}

// -------------------------------------------------------------------

// Player_Login

// optional int32 char_id = 1;
inline void Player_Login::clear_char_id() {
  char_id_ = 0;
}
inline ::google::protobuf::int32 Player_Login::char_id() const {
  // @@protoc_insertion_point(field_get:gr.Player_Login.char_id)
  return char_id_;
}
inline void Player_Login::set_char_id(::google::protobuf::int32 value) {
  
  char_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Player_Login.char_id)
}

// optional int32 ipv4 = 2;
inline void Player_Login::clear_ipv4() {
  ipv4_ = 0;
}
inline ::google::protobuf::int32 Player_Login::ipv4() const {
  // @@protoc_insertion_point(field_get:gr.Player_Login.ipv4)
  return ipv4_;
}
inline void Player_Login::set_ipv4(::google::protobuf::int32 value) {
  
  ipv4_ = value;
  // @@protoc_insertion_point(field_set:gr.Player_Login.ipv4)
}

// -------------------------------------------------------------------

// Inter_Server_Register

// optional int32 server_type = 1;
inline void Inter_Server_Register::clear_server_type() {
  server_type_ = 0;
}
inline ::google::protobuf::int32 Inter_Server_Register::server_type() const {
  // @@protoc_insertion_point(field_get:gr.Inter_Server_Register.server_type)
  return server_type_;
}
inline void Inter_Server_Register::set_server_type(::google::protobuf::int32 value) {
  
  server_type_ = value;
  // @@protoc_insertion_point(field_set:gr.Inter_Server_Register.server_type)
}

// -------------------------------------------------------------------

// Notify_Obj_Master_Player_Login

// optional int32 char_id = 1;
inline void Notify_Obj_Master_Player_Login::clear_char_id() {
  char_id_ = 0;
}
inline ::google::protobuf::int32 Notify_Obj_Master_Player_Login::char_id() const {
  // @@protoc_insertion_point(field_get:gr.Notify_Obj_Master_Player_Login.char_id)
  return char_id_;
}
inline void Notify_Obj_Master_Player_Login::set_char_id(::google::protobuf::int32 value) {
  
  char_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Notify_Obj_Master_Player_Login.char_id)
}

// -------------------------------------------------------------------

// Gatemgr_Apply_Fastest_Gate

// optional int32 client_connection_id = 1;
inline void Gatemgr_Apply_Fastest_Gate::clear_client_connection_id() {
  client_connection_id_ = 0;
}
inline ::google::protobuf::int32 Gatemgr_Apply_Fastest_Gate::client_connection_id() const {
  // @@protoc_insertion_point(field_get:gr.Gatemgr_Apply_Fastest_Gate.client_connection_id)
  return client_connection_id_;
}
inline void Gatemgr_Apply_Fastest_Gate::set_client_connection_id(::google::protobuf::int32 value) {
  
  client_connection_id_ = value;
  // @@protoc_insertion_point(field_set:gr.Gatemgr_Apply_Fastest_Gate.client_connection_id)
}

// -------------------------------------------------------------------

// Server_Info

// optional string ip = 1;
inline void Server_Info::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_Info::ip() const {
  // @@protoc_insertion_point(field_get:gr.Server_Info.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_Info::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gr.Server_Info.ip)
}
inline void Server_Info::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gr.Server_Info.ip)
}
inline void Server_Info::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gr.Server_Info.ip)
}
inline ::std::string* Server_Info::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:gr.Server_Info.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_Info::release_ip() {
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_Info::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:gr.Server_Info.ip)
}

// optional int32 port = 2;
inline void Server_Info::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 Server_Info::port() const {
  // @@protoc_insertion_point(field_get:gr.Server_Info.port)
  return port_;
}
inline void Server_Info::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:gr.Server_Info.port)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gr

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gate_5frelated_2eproto__INCLUDED
